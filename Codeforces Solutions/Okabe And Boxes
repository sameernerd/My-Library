/*
This question I was not able to solve own my own. I had to take answer from tutorial.So here goes how it works:-
Since we have to remove boxes from 1-n so ever remove will give command like remove remove remove then remove from 1-3.
It is sure that box labeled from 1-3 will be in stack.
Now let think that 9 was also present in stact and we removed it. So it will not matter until the remove counts to 9.
So after that let add 4 then(remember that 9 is gone) ,since count=4 it will work and now will count 5. PERIOD.
*/

import java.util.*;
import java.io.*;

public class meramainmahan {
		
	public static int solve(int n,String s[]){
		Stack<Integer> st=new Stack();
		int res=0,count=1;
		String c[]=new String[2];
		for(int i=0;i<2*n;i++){
			c=s[i].split(" ");
			if(c[0].equals("add"))st.push(Integer.parseInt(c[1]));
			else{
				if(!st.isEmpty()){
				if(st.peek()==count)st.pop();
				else{
					res++;
					st.clear();
				}
			}
				count++;
			}
		}
		return res;
	}
	
	public static void main(String[] args) throws  IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		int n=Integer.parseInt(br.readLine());
		String ar[]=new String[2*n];
		for(int i=0;i<2*n;i++)
			ar[i]=br.readLine();
		System.out.println(solve(n,ar));
	}

}
